//------------------------------------------------------------------------------
// polar.cpp - содержит функции обработки полярных координат
//------------------------------------------------------------------------------

#include "polar.h"

//------------------------------------------------------------------------------
// Ввод параметров полярной координаты из потока
void In(polar& p, FILE& ifst) {
    // ifst >> p.a >> p.b;
    fscanf(&ifst, "%d%d", &p.a, &p.b);
    if (p.a <= 0) {
        printf("%s", "Incorrect input values.\nRadial distance must be positive");
        exit(0);
    }
    if (p.b >= 360 || p.b < 0) {
        printf("%s", "Incorrect input values.\nAazimuth must be between 0 and 360 degrees");
        exit(0);
    }
}

// Случайный ввод параметров полярной координаты
void InRnd(polar& p) {
    do {
        p.a = Random();
        p.b = Random();
    } while (p.b >= 360 || p.a < 0 || p.b < 0);
}

//------------------------------------------------------------------------------
// Вывод параметров полярной координаты в поток
void Out(polar& p, FILE& ofst) {
    /*ofst << "It is Polar: a = "
        << p.a << ", b = " << p.b
        << ". Real = " << Real(p) << "\n";*/
    fprintf(&ofst, "%s%d%s%d%s%g%s", "It is Polar: a = "
        , p.a, ", b = ", p.b
        , ". Real = ", Real(p), "\n");
}

//------------------------------------------------------------------------------
// Приведение полярной координаты к действительному числу
double Real(polar& t) {
    return t.a;
}
